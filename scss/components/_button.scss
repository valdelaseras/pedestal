/* mixins */
@mixin hover-button-border($color) {
    border-color: $color;
}

@mixin hover-button-background($color) {
    background-color: $color;
}



/* base button */
.button {
    display: inline-block;
    text-align: center;
    width: auto;
    padding: calc( $padding / 2 - $border-width ) $padding;
    border-width: $border-width;
    border-radius: $border-radius;
    border-style: solid;
    border-color: transparent;
    transition-duration: $transition-duration;
    transform-style: $transition-style;

    &.bordered {
        border-color: currentColor;
    }
}

.button:hover {
    cursor: pointer;
}



/* base disabled button */
.button.button-disabled {
    pointer-events: none;
    background-color: $background-color-disabled;
    color: $font-color-disabled;
}

.button.button-disabled:hover,
.button.button-disabled:focus,
.button.button-disabled:focus-within {
    cursor: not-allowed;
}



/* compact button */
.button-compact {
    padding: calc( $padding / 2 - $border-width ) calc( $padding / 2 );
}



/* wide button */
.button-wide {
    padding: calc( $padding / 2 - $border-width ) calc( $padding * 2 );
}



/* button hover */
.button.theme-primary:hover,
.button.theme-secondary:hover,
.button.accent-theme-primary:hover,
.button.accent-theme-secondary:hover,
.button.theme-success:hover,
.button.theme-warning:hover,
.button.theme-error:hover {
    @include hover-button-background(transparent);
    @include hover-button-border(currentColor);
}

.button.theme-primary.bordered:hover,
.button.theme-secondary.bordered:hover,
.button.accent-theme-primary.bordered:hover,
.button.accent-theme-secondary.bordered:hover,
.button.theme-success.bordered:hover,
.button.theme-warning.bordered:hover,
.button.theme-error.bordered:hover {
    @include hover-button-border(transparent);
}













