/* mixins */
@mixin button-action-border($color) {
    border-color: $color;
}

@mixin button-action-background($color) {
    background-color: $color;
}



/* base button */
.button {
    display: inline-block;
    text-align: center;
    width: auto;
    padding: calc( $padding / 2 - $border-width ) $padding;
    border-width: $border-width;
    border-radius: $border-radius;
    border-style: solid;
    border-color: transparent;
    -webkit-transition-duration: $transition-duration;
    -o-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
    -webkit-transform-style: $transition-style;
    transform-style: $transition-style;

    &.bordered {
        border-color: currentColor;
    }
}

.button:hover {
    cursor: pointer;
}



/* base disabled button */
.button.button-disabled {
    pointer-events: none;
    background-color: $background-color-disabled;
    color: $font-color-disabled;
}

.button.button-disabled:hover,
.button.button-disabled:focus,
.button.button-disabled:focus-within,
.button.button-disabled:active, {
    cursor: not-allowed;
    @include button-action-background($background-color-disabled);
    @include button-action-border($font-color-disabled);
}



/* compact button */
.button-compact {
    padding: calc( $padding / 2 - $border-width ) calc( $padding / 2 );
}



/* wide button */
.button-wide {
    padding: calc( $padding / 2 - $border-width ) calc( $padding * 2 );
}



/* button action */
.button:hover,
.button:focus,
.button:focus-within,
.button:active {
    @include button-action-background(transparent);
    @include button-action-border(currentColor);
}

.button.bordered:hover,
.button.bordered:focus,
.button.bordered:focus-within,
.button.bordered:active {
    @include button-action-border(transparent);
}













